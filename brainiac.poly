/* brainiac.c */                                           ║#  Brainiac.py                                           ║(* Brainiac.Mod *)                                       ║!brainiac.f90                                            ║// brainiac.go                                                 
                                                           ║                                                         ║MODULE Brainiac;                                         ║PROGRAM Brainiac                                         ║package main                                             
                                                           ║                                                         ║                                                         ║                                                         ║                                                         
#include <stdio.h>                                         ║                                                         ║IMPORT Args := extArgs, Err := extErr, Out;              ║                                                         ║import "fmt"                                             
                                                           ║                                                         ║CONST                                                    ║                                                         ║                                                         
                                                           ║                                                         ║  SPD = 40; (* Synapses per Dendrite *)                  ║                                                         ║                                                         
                                                           ║                                                         ║  PPP = 48; (* Proximal per Pyramidal *)                 ║                                                         ║                                                         
                                                           ║                                                         ║  BPP = 48; (* Basal per Pyramidal *)                    ║                                                         ║                                                         
                                                           ║                                                         ║  APP = 48; (* Apical per Pyramidal *)                   ║                                                         ║                                                         
                                                           ║                                                         ║  PinL2 = 32; (* Pyramidal in L2 *)                      ║                                                         ║                                                         
                                                           ║                                                         ║  PinL4 = 32; (* Pyramidal in L4 *)                      ║                                                         ║                                                         
                                                           ║                                                         ║  PinL6 = 32; (* Pyramidal in L6 *)                      ║                                                         ║                                                         
                                                           ║                                                         ║  PinTh = 4;  (* Pyramidal in Thalmus *)                 ║                                                         ║                                                         
                                                           ║                                                         ║                                                         ║                                                         ║                                                         
                                                           ║                                                         ║TYPE                                                     ║                                                         ║                                                         
                                                           ║                                                         ║  Potential = RECORD Excited: BOOLEAN END;               ║                                                         ║                                                         
                                                           ║                                                         ║  Synapse = INTEGER; (* PTR to Potential w/o GC *)       ║                                                         ║                                                         
                                                           ║                                                         ║  Dendrite = ARRAY SPD OF Synapse;                       ║                                                         ║                                                         
                                                           ║                                                         ║  Pyramidal = RECORD                                     ║                                                         ║                                                         
                                                           ║                                                         ║             State: Potential;                           ║                                                         ║                                                         
                                                           ║                                                         ║             Proximal:  ARRAY PPP OF Dendrite;           ║                                                         ║                                                         
                                                           ║                                                         ║             Basal: ARRAY BPP OF Dendrite;               ║call begin()                                             ║                                                         
                                                           ║                                                         ║             Apical: ARRAY APP OF Dendrite               ║                                                         ║                                                         
                                                           ║                                                         ║           END;                                          ║CONTAINS                                                 ║                                                         
                                                           ║                                                         ║  Minicolumn = RECORD                                    ║                                                         ║                                                         
                                                           ║                                                         ║                 L2: ARRAY PinL2 OF Pyramidal;           ║                                                         ║                                                         
                                                           ║                                                         ║                 L4: ARRAY PinL4 OF Pyramidal;           ║                                                         ║                                                         
                                                           ║                                                         ║                 L6: ARRAY PinL6 OF Pyramidal;           ║                                                         ║                                                         
                                                           ║                                                         ║                 Thalmus: ARRAY PinTh OF Pyramidal       ║                                                         ║                                                         
                                                           ║                                                         ║               END;                                      ║                                                         ║                                                         
                                                           ║                                                         ║                                                         ║                                                         ║                                                         
void initialize(void){                                     ║def initialize():                                        ║PROCEDURE initialize;                                    ║  SUBROUTINE initialize( )                               ║func initialize(){                                    
  printf("  initializing\n");                              ║  print("  initializing")                                ║VAR                                                      ║    implicit none                                        ║                                                      
}                                                          ║                                                         ║  i,res:INTEGER;                                         ║    print *,' initializing'                              ║//  var i,res int                                         
                                                           ║                                                         ║  arg:ARRAY 256 OF CHAR;                                 ║    RETURN                                               ║//  var arg [256] char                                 
                                                           ║                                                         ║BEGIN                                                    ║  END SUBROUTINE                                         ║
                                                           ║                                                         ║  Out.String("  initializing"); Out.Ln;                  ║                                                         ║  fmt.Println("  initializing")                 
                                                           ║                                                         ║  Args.Get(0, arg, res);                                 ║                                                         ║//  Args.Get(0, arg, res);                                 
                                                           ║                                                         ║  Out.String("  "); Out.String(arg); Out.Ln;             ║                                                         ║//  Out.String("  "); Out.String(arg); Out.Ln;             
                                                           ║                                                         ║END initialize;                                          ║                                                         ║}                                      
                                                           ║                                                         ║                                                         ║                                                         ║                                                         
void iterate(void){                                        ║def iterate():                                           ║PROCEDURE iterate;                                       ║  SUBROUTINE iterate( )                                  ║func iterate(){                                       
  printf("  iterating\n");                                 ║  print("  iterating")                                   ║BEGIN                                                    ║    implicit none                                        ║                                                    
}                                                          ║                                                         ║  Out.String("  iterating"); Out.Ln;                     ║    print *,' iterating'                                 ║  fmt.Println("  iterating")                     
                                                           ║                                                         ║                                                         ║    RETURN                                               ║                                                         
                                                           ║                                                         ║END iterate;                                             ║  END SUBROUTINE                                         ║}                                             
                                                           ║                                                         ║                                                         ║                                                         ║                                                         
void summarize(void){                                      ║def summarize():                                         ║PROCEDURE summarize;                                     ║  SUBROUTINE summarize( )                                ║func summarize(){                                     
  printf("  summarizing\n");                               ║  print("  summarizing")                                 ║BEGIN                                                    ║    implicit none                                        ║                                                    
}                                                          ║                                                         ║  Out.String("  summarizing"); Out.Ln;                   ║    print *,' summarizing'                               ║  fmt.Println("  summarizing")                   
                                                           ║                                                         ║                                                         ║    RETURN                                               ║                                                         
                                                           ║                                                         ║END summarize;                                           ║  END SUBROUTINE                                         ║}                                         
                                                           ║                                                         ║                                                         ║                                                         ║                                                         
void main(void){                                           ║if __name__ == "__main__":                               ║BEGIN                                                    ║  SUBROUTINE begin( )                                    ║func main(){                                                    
  printf(" Brainiac\n");                                   ║  print(" Brainiac")                                     ║  Out.String(" Brainiac"); Out.Ln;                       ║    print *,'Brainiac'                                   ║  fmt.Println(" Brainiac")                       
  initialize();                                            ║  initialize()                                           ║                                                         ║    call initialize()                                    ║                                                         
  iterate();                                               ║  iterate()                                              ║  initialize;                                            ║    call iterate()                                       ║  initialize()                                            
  summarize();                                             ║  summarize()                                            ║  iterate;                                               ║    call summarize()                                     ║  iterate()                                           
}                                                          ║                                                         ║  summarize;                                             ║                                                         ║  summarize()                                             
                                                           ║                                                         ║                                                         ║                                                         ║                                                         
                                                           ║                                                         ║                                                         ║                                                         ║                                                         
                                                           ║                                                         ║                                                         ║                                                         ║                                                         
                                                           ║                                                         ║                                                         ║                                                         ║                                                         
                                                           ║                                                         ║                                                         ║  END SUBROUTINE                                         ║                                                         
                                                           ║                                                         ║END Brainiac.                                            ║END PROGRAM Brainiac                                     ║}                                            
                                                           ║                                                         ║                                                         ║                                                         ║                                                         
                                                           ║                                                         ║                                                         ║                                                         ║                                                         
                                                           ║                                                         ║                                                         ║                                                         ║                                                         
                                                           ║                                                         ║                                                         ║                                                         ║                                                         
